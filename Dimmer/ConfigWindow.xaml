<Window x:Name="ConfigWindow" x:Class="ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Zumwani.Dimmer"
        xmlns:rules="clr-namespace:Zumwani.Dimmer.ValidationRules"
        xmlns:commands="clr-namespace:Zumwani.Dimmer.Commands"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:b="http://schemas.microsoft.com/expression/blend/2008"
        Title="Configure Dimareas - Dimmer" WindowStartupLocation="CenterScreen"
        Width="1045" Height="600" MinWidth="1045" MinHeight="580"
        
        FontFamily="Segoe UI Semilight" FontSize="14"
        BorderThickness="0" BorderBrush="LightGray" ResizeMode="CanResize"
        MouseDown="ConfigWindow_MouseDown">
    <Window.InputBindings>
        <KeyBinding Gesture="Enter" Command="{x:Static commands:SetFocusCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme/ConfigWindow.xaml"/>
                <ResourceDictionary Source="Credits.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </Window.Resources>
    
    <Grid>
        
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0.6" Margin="8" Name="CreditsPanel" MouseEnter="CreditsPanel_MouseEnter" MouseLeave="CreditsPanel_MouseLeave" Background="Transparent">
            <Grid.Resources>

                <Storyboard x:Key="ShowAnimation">
                    <DoubleAnimation Storyboard.TargetName="CreditsInactiveLabel" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" Completed="CreditsShowAnimation_Completed"/>
                    <DoubleAnimation Storyboard.TargetName="CreditsActiveLabel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" BeginTime="0:0:0.25"/>
                </Storyboard>
                
                <Storyboard x:Key="HideAnimation">
                    <DoubleAnimation Storyboard.TargetName="CreditsActiveLabel" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" Completed="CreditsHideAnimation_Completed"/>
                    <DoubleAnimation Storyboard.TargetName="CreditsInactiveLabel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" BeginTime="0:0:0.25"/>
                </Storyboard>

            </Grid.Resources>

            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Text="Credits" Name="CreditsInactiveLabel"/>

            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0" Name="CreditsActiveLabel" Visibility="Collapsed">
                <TextBlock HorizontalAlignment="Right" FontSize="11">
                    <Run Text="Application developed by"/>
                    <Run Text="Andreas Ingeholm." Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.Self}" MouseUp="CreditsLink_MouseUp"/>
                </TextBlock>
                <TextBlock HorizontalAlignment="Right" FontSize="11">
                    <Run Text="Button icons made by"/>
                    <Run Text="Google" Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.Google}" MouseUp="CreditsLink_MouseUp"/>
                    <Run Text="from"/>
                    <Run Text="www.flaticon.com" Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.Flat_Icon}" MouseUp="CreditsLink_MouseUp"/>
                    <Run Text="and is licensed by"/>
                    <Run Text="CC BY 3.0." Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.CC_30}" MouseUp="CreditsLink_MouseUp"/>
                </TextBlock>
                <TextBlock HorizontalAlignment="Right" FontSize="11">
                    <Run Text="Application icon made by"/>
                    <Run Text="Freepik" Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.Freepik}" MouseUp="CreditsLink_MouseUp"/>
                    <Run Text="from"/>
                    <Run Text="www.flaticon.com" Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.Flat_Icon}" MouseUp="CreditsLink_MouseUp"/>
                    <Run Text="and is licensed by"/>
                    <Run Text="CC BY 3.0." Cursor="Hand" TextDecorations="Underline" Tag="{StaticResource Credits.CC_30}" MouseUp="CreditsLink_MouseUp"/>
                </TextBlock>
            </StackPanel>
            
        </Grid>
        
        <Grid Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="42"/>
                </Grid.RowDefinitions>

                <Border Grid.Column="0" BorderBrush="DarkGray"
                    BorderThickness="0" ClipToBounds="True">
                    <Border Background="Transparent" BorderBrush="Black" BorderThickness="1,1,1,1" Margin="-2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
                        </Border.Effect>
                    </Border>
                </Border>

                <ListBox Name="List" Grid.Row="0" Width="250" SelectedIndex="0"
                         HorizontalAlignment="Left" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         Background="{x:Null}" BorderThickness="0"
                         FontSize="22"
                         ItemsSource="{Binding Source={x:Static local:Application.Current}, Path=DimAreaManager.DimAreas}" DisplayMemberPath="Title"
                         SelectionChanged="List_SelectionChanged" ContextMenuOpening="List_ContextMenuOpening">
                    <ListBox.ContextMenu>
                        <ContextMenu Name="ListContextMenu">
                            <ContextMenu.Items>
                                <MenuItem Header="Set as favorite" Name="FavoriteMenuItem" Click="FavoriteMenuItem_Click">
                                    <MenuItem.ToolTip>
                                        <ToolTip Content="Setting as favorite will allow you to single click the notification icon to show / hide this dim area."/>
                                    </MenuItem.ToolTip>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Move up" Name="MoveUpMenuItem" Click="MoveUpMenuItem_Click"/>
                                <MenuItem Header="Move down" Name="MoveDownMenuItem" Click="MoveDownMenuItem_Click"/>
                                <Separator/>
                                <MenuItem Header="Remove" Click="RemoveMenuItem_Click"/>
                            </ContextMenu.Items>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>

                <Border Name="UndoNotification" VerticalAlignment="Bottom" Visibility="Collapsed"
                    Margin="0,-1,0,0" Height="38"
                    BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="1"
                    DockPanel.Dock="Bottom" Background="LightGreen">

                    <TextBlock FontSize="13" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock>An item has been removed.</TextBlock>
                    <Hyperlink Click="UndoLink_Click">Undo</Hyperlink>
                </TextBlock>

                    <Border.Resources>
                        <Storyboard x:Key="HideAnimation">
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="38" To="0" Duration="0:0:01" SpeedRatio="10"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:01" SpeedRatio="10"/>
                        </Storyboard>
                        <Storyboard x:Key="ShowHideAnimation" Completed="FinishRemove">
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="38" BeginTime="0:0:0" Duration="0:0:01" SpeedRatio="10"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:0" Duration="0:0:01" SpeedRatio="10"/>

                            <DoubleAnimation Storyboard.TargetProperty="Height" From="38" To="0" BeginTime="0:0:7" Duration="0:0:01" SpeedRatio="10"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" BeginTime="0:0:7" Duration="0:0:01" SpeedRatio="10"/>
                        </Storyboard>
                    </Border.Resources>

                </Border>

                <DockPanel Grid.Row="1" LastChildFill="False">
                    <local:ImageButton Width="42" Height="42" HorizontalAlignment="Left" Click="AddButton_Click" Content="Resources/add.png" Opacity=".5"/>
                    <local:ImageButton Width="42" Height="42" HorizontalAlignment="Left" Click="RemoveButton_Click" Content="Resources/remove.png" Opacity=".5"/>
                    <local:ImageButton Width="42" Height="42" DockPanel.Dock="Right" x:Name="UpButton" Click="UpButton_Click" Content="Resources/move-up.png" Opacity=".5"/>
                    <local:ImageButton Width="42" Height="42" DockPanel.Dock="Right" x:Name="DownButton" Click="DownButton_Click" Content="Resources/move-down.png" Opacity=".5"/>
                </DockPanel>

            </Grid>

            <Grid Grid.Column="1" Margin="40,20,40,40">

                <Grid.RowDefinitions>
                    <RowDefinition Height="150"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Name="contentarea" Grid.Row="0">

                    <TextBlock Text="Name:" DockPanel.Dock="Top"/>
                    <TextBox DockPanel.Dock="Top">
                        <TextBox.Text>
                            <Binding ElementName="List" Path="SelectedItem.Title" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        </TextBox.Text>
                    </TextBox>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=List, Path=SelectedItems.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition Width="75"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48"/>
                                <RowDefinition Height="48"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Column="0" Grid.Row="0" Margin="3">
                                <TextBlock Text="X:"/>
                                <TextBox Background="White" TabIndex="9">
                                    <TextBox.Text>
                                        <Binding ElementName="List" Path="SelectedItem.Left" Mode="TwoWay"/>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Grid.Row="0" Margin="3">
                                <TextBlock Text="Y:"/>
                                <TextBox Background="White" TabIndex="9">
                                    <TextBox.Text>
                                        <Binding ElementName="List" Path="SelectedItem.Top" Mode="TwoWay"/>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>

                            <StackPanel Grid.Column="0" Grid.Row="1" Margin="3">
                                <TextBlock Text="Width:"/>
                                <TextBox Style="{StaticResource FullscreenCueTextTextBoxStyle}" TabIndex="9">
                                    <TextBox.Text>
                                        <Binding ElementName="List" Path="SelectedItem.Width" Mode="TwoWay" TargetNullValue="">
                                            <Binding.ValidationRules>
                                                <rules:DisallowStringRule InvalidString="0" ValidationMethod="Equals"/>
                                                <rules:DisallowStringRule InvalidString="-" ValidationMethod="Contains"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Grid.Row="1" Margin="3">
                                <TextBlock Text="Height:"/>
                                <TextBox Style="{StaticResource FullscreenCueTextTextBoxStyle}" TabIndex="9">
                                    <TextBox.Text>
                                        <Binding ElementName="List" Path="SelectedItem.Height" Mode="TwoWay" TargetNullValue="">
                                            <Binding.ValidationRules>
                                                <rules:DisallowStringRule InvalidString="0" ValidationMethod="Equals"/>
                                                <rules:DisallowStringRule InvalidString="-" ValidationMethod="Contains"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>

                        </Grid>
                        
                        <StackPanel Margin="3">
                            <TextBlock Text="Color:"/>
                            <xctk:ColorPicker Name="ColorBox" SelectedColorChanged="SetColor" Width="100" MinWidth="100" MaxWidth="100"/>
                            <StackPanel Orientation="Horizontal" Margin="5,5,0,0">
                                <TextBlock Text="Alpha:" Margin="-5,0,5,0"/>
                                <TextBox Name="AlphaBox" Width="28" Height="20" TextChanged="SetColor"/>
                                <TextBlock Text="%" Margin="3,0,0,0"/>
                            </StackPanel>

                        </StackPanel>

                        <StackPanel Margin="3">
                            
                            <GroupBox>
                                <GroupBox.Header>
                                    <CheckBox Name="checkbox" Content="Hide mouse" IsChecked="{Binding ElementName=List, Path=SelectedItem.HideMouse}"/>
                                </GroupBox.Header>
                                
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock Text="Delay:" Margin="0,7,0,0"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBox Margin="0,3,0,0" Name="MouseHideDelayBox" ToolTip="The time to wait before hiding mouse after it has gone idle." Width="42"
                                                 TextChanged="SetMouseHideDelay" Style="{StaticResource ImmediateCueTextTextBoxStyle}" IsEnabled="{Binding ElementName=checkbox, Path=IsChecked}"/>
                                        <TextBlock Text="s" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,0"/>
                                    </StackPanel>
                                </StackPanel>
                                
                            </GroupBox>

                        </StackPanel>

                        <GroupBox Header="Undim at:" BorderThickness="0" Margin="3">
                            <StackPanel>
                                <RadioButton Content="Mouse move" Name="DimOptionMoveButton" Click="DimOptionMoveButton_Click" Margin="0,2,0,0"/>
                                <RadioButton Content="Mouse click" Name="DimOptionClickButton" Click="DimOptionClickButton_Click" Margin="0,2,0,0"/>
                            </StackPanel>
                        </GroupBox>
                        
                        <StackPanel Margin="3">

                            <GroupBox>
                                <GroupBox.Header>
                                    <CheckBox Name="RedimCheckbox" Content="Automatically re-dim:" IsChecked="{Binding ElementName=List, Path=SelectedItem.RedimWhenMouseStationary}"/>
                                </GroupBox.Header>
                                
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock Text="Delay:" Margin="0,7,0,0"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBox Margin="0,3,0,0" Name="RedimDelayBox" ToolTip="The time to wait before re-dimming after mouse is stationary, inside of dim area." Width="42"
                                                 TextChanged="SetRedimDelay" IsEnabled="{Binding ElementName=RedimCheckbox, Path=IsChecked}"/>
                                        <TextBlock Text="s" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,0"/>
                                    </StackPanel>
                                </StackPanel>
                                
                            </GroupBox>

                        </StackPanel>

                    </StackPanel>
                </StackPanel>

                <Border Grid.Row="2" DockPanel.Dock="Bottom" BorderThickness="1" BorderBrush="LightGray">
                    <Border.Background>
                        <ImageBrush ImageSource="Resources/transparent.png" TileMode="Tile" Stretch="None" ViewboxUnits="Absolute" ViewportUnits="Absolute" Viewbox="0,0,128,128" Viewport="0,0,128,128"/>
                    </Border.Background>

                    <local:DimAreaElement IsPreview="True" x:Name="Preview"/>

                </Border>

            </Grid>

        </Grid>
        
    </Grid>
    
</Window>
