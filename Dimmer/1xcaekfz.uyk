<Window x:Name="ConfigWindow" x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Zumwani.Dimmer"
        xmlns:rules="clr-namespace:Zumwani.Dimmer.ValidationRules"
        xmlns:converters="clr-namespace:Zumwani.Dimmer.Converters"
        xmlns:commands="clr-namespace:Zumwani.Dimmer.Commands"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:b="http://schemas.microsoft.com/expression/blend/2008"
        Title="MainWindow" WindowStartupLocation="CenterScreen"
        Width="800" Height="500" Icon="Icon.ico"
        Background="{StaticResource MaterialColors.PrimaryBrush}" Foreground="{StaticResource MaterialColors.PrimaryTextBrush}"
        FontFamily="Segoe UI Semilight" FontSize="14"
        WindowStyle="None" BorderThickness="1" BorderBrush="{StaticResource MaterialColors.DividerBrush}" ResizeMode="CanMinimize">
    <Window.InputBindings>
        <MouseBinding Gesture="LeftClick" Command="{x:Static commands:MoveWindowCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
        <KeyBinding Gesture="Enter" Command="{x:Static commands:SetFocusCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
    </Window.InputBindings>
    
    <Window.Resources>
        
        <local:DimArea x:Key="DummyDimArea"/>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <DockPanel>
                            <DockPanel.Background>
                                <SolidColorBrush Color="{StaticResource MaterialColors.AccentColor}" Opacity="0"/>
                            </DockPanel.Background>
                            <DockPanel.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" To="0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Selected">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </DockPanel.Triggers>
                            <Border Height="42" HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding Title}" Foreground="{StaticResource MaterialColors.PrimaryTextBrush}" FontSize="20" Margin="10,0" VerticalAlignment="Center"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <Border Grid.Column="0" Background="{StaticResource MaterialColors.DarkPrimaryBrush}" BorderBrush="DarkGray" 
           BorderThickness="0" ClipToBounds="True">
            <Border Background="Transparent" BorderBrush="Black" 
              BorderThickness="0,0,1,0" Margin="-2">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
                </Border.Effect>
            </Border>
        </Border>

        <ListBox Name="List" Grid.Column="0" HorizontalAlignment="Left" Width="250" Background="{x:Null}" BorderThickness="0">
            <ListBox.ItemsSource>
                <CompositeCollection>
                    <local:DimArea Title="My dimarea" UndimOption="MouseMove"/>
                    <local:DimArea Title="My dimarea"/>
                </CompositeCollection>
            </ListBox.ItemsSource>
        </ListBox>

        <Grid Grid.Column="1">

            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="256"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="1" Height="30" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button Style="{StaticResource SystemButton}" Command="{x:Static commands:MinimizeWindowCommand.Instance}">
                    <Button.Background>
                        <ImageBrush ImageSource="Resources/minimize.png"/>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource SystemButton}" Command="{x:Static commands:HideWindowCommand.Instance}">
                    <Button.Background>
                        <ImageBrush ImageSource="Resources/close.png"/>
                    </Button.Background>
                </Button>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <TextBlock Text="Name:" Foreground="{StaticResource MaterialColors.PrimaryTextBrush}" Background="{StaticResource MaterialColors.PrimaryBrush}" DockPanel.Dock="Top"/>
                <TextBox DockPanel.Dock="Top">
                    <TextBox.Text>
                        <Binding ElementName="List" Path="SelectedItem.Title" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                    </TextBox.Text>
                </TextBox>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=List, Path=SelectedItems.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="56"/>
                            <ColumnDefinition Width="56"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="56"/>
                            <RowDefinition Height="56"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Column="0" Grid.Row="0" Margin="5">
                            <TextBlock Text="X:"/>
                            <TextBox Background="White" TabIndex="9">
                                <TextBox.Text>
                                    <Binding ElementName="List" Path="SelectedItem.Left" Mode="TwoWay"/>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="0" Margin="5">
                            <TextBlock Text="Y:"/>
                            <TextBox Background="White" TabIndex="9">
                                <TextBox.Text>
                                    <Binding ElementName="List" Path="SelectedItem.Top" Mode="TwoWay"/>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Grid.Column="0" Grid.Row="1" Margin="5">
                            <TextBlock Text="Width:"/>
                            <TextBox Background="White" Style="{StaticResource FullscreenCueTextTextBoxStyle}" TabIndex="9">
                                <TextBox.Text>
                                    <Binding ElementName="List" Path="SelectedItem.Width" Mode="TwoWay">
                                        <Binding.ValidationRules>
                                            <rules:DisallowStringRule InvalidString="0" ValidationMethod="Equals"/>
                                            <rules:DisallowStringRule InvalidString="-" ValidationMethod="Contains"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Grid.Row="1" Margin="5">
                            <TextBlock Text="Height:"/>
                            <TextBox Background="White" Style="{StaticResource FullscreenCueTextTextBoxStyle}" TabIndex="9">
                                <TextBox.Text>
                                    <Binding ElementName="List" Path="SelectedItem.Height" Mode="TwoWay">
                                        <Binding.ValidationRules>
                                            <rules:DisallowStringRule InvalidString="0" ValidationMethod="Equals"/>
                                            <rules:DisallowStringRule InvalidString="-" ValidationMethod="Contains"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                    </Grid>

                    <StackPanel Margin="5">
                        <TextBlock Text="Color:"/>
                        <xctk:ColorPicker SelectedColor="{Binding ElementName=List, Path=SelectedItem.Color, Mode=TwoWay}"/>
                        <StackPanel Orientation="Horizontal" Margin="5,5,0,0">
                            <TextBlock Text="Alpha:" Margin="0,0,5,0"/>
                            <TextBox Width="28" Height="20"
                                 Text="{Binding ElementName=List, Path=SelectedItem.Color, Converter={x:Static converters:ColorAlphaToPercentageConverter.Instance}}"/>
                            <TextBlock Text="%" Margin="3,0,0,0"/>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel ToolTip="The time to wait before dimming after mouse has left." Margin="5">
                        <TextBlock Text="Dim delay:"/>
                        <TextBox/>
                    </StackPanel>

                    <GroupBox Header="Undim at:" BorderThickness="0" Margin="5">
                        <StackPanel>
                            <RadioButton Content="Nothing" Name="DimOptionNoneButton" Click="DimOptionNoneButton_Click" Margin="0,5,0,0"/>
                            <RadioButton Content="Mouse move" Name="DimOptionMoveButton" Click="DimOptionMoveButton_Click" Margin="0,2,0,0"/>
                            <RadioButton Content="Mouse click" Name="DimOptionClickButton" Click="DimOptionClickButton_Click" Margin="0,2,0,0"/>
                        </StackPanel>
                    </GroupBox>

                </StackPanel>
            </StackPanel>

            <Border Grid.Row="2" Width="408" Height="256" DockPanel.Dock="Bottom" BorderThickness="1" BorderBrush="{StaticResource MaterialColors.DividerBrush}">
                <local:DimAreaElement DimArea="{Binding ElementName=List, Path=SelectedItem, TargetNullValue={StaticResource DummyDimArea}}"/>
            </Border>
            


        </Grid>
        
    </Grid>
</Window>
